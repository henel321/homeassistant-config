sensor:
  - platform: template
    sensors:   
      ikea_remote_bedroom:
        friendly_name: 'Ikea Remote - Bedroom'
        value_template: "{{ states.sensor.bedroom.attributes.battery_level|default(-1)|int if states.sensor.bedroom is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.sensor.bedroom.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.sensor.bedroom.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.sensor.bedroom.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.sensor.bedroom.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.sensor.bedroom.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.sensor.bedroom.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.sensor.bedroom.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.sensor.bedroom.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.sensor.bedroom.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.sensor.bedroom.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'

  - platform: template
    sensors:
      ikea_remote_livingroom:
        friendly_name: 'Ikea Remote - Living room'
        value_template: "{{ states.sensor.living_room_remote.attributes.battery_level|default(-1)|int if states.sensor.living_room_remote is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.sensor.living_room_remote.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.sensor.living_room_remote.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.sensor.living_room_remote.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.sensor.living_room_remote.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.sensor.living_room_remote.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.sensor.living_room_remote.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.sensor.living_room_remote.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.sensor.living_room_remote.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.sensor.living_room_remote.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.sensor.living_room_remote.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'

  - platform: template
    sensors:
      ikea_remote_elin:
        friendly_name: 'Ikea Remote - Elin'
        value_template: "{{ states.sensor.elins_remote.attributes.battery_level|default(-1)|int if states.sensor.elins_remote is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.sensor.elins_remote.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.sensor.elins_remote.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.sensor.elins_remote.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.sensor.elins_remote.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.sensor.elins_remote.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.sensor.elins_remote.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.sensor.elins_remote.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.sensor.elins_remote.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.sensor.elins_remote.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.sensor.elins_remote.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'


  - platform: template
    sensors:
      ikea_remote_vilhelm:
        friendly_name: 'Ikea Remote - Vilhelm'
        value_template: "{{ states.sensor.vilhelms_remote.attributes.battery_level|default(-1)|int if states.sensor.vilhelms_remote is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.sensor.vilhelms_remote.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.sensor.vilhelms_remote.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.sensor.vilhelms_remote.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.sensor.vilhelms_remote.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.sensor.vilhelms_remote.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.sensor.vilhelms_remote.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.sensor.vilhelms_remote.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.sensor.vilhelms_remote.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.sensor.vilhelms_remote.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.sensor.vilhelms_remote.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'


  - platform: template
    sensors:
      zwave_pir_hallway:
        friendly_name: 'PIR - Hallway'
        value_template: "{{ states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level|default(-1)|int if states.zwave.neo_coolcam_battery_powered_pir_sensor is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.neo_coolcam_battery_powered_pir_sensor.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'


  - platform: template
    sensors:
      zwave_door_hallway:
        friendly_name: 'Door Sensor - Hallway'
        value_template: "{{ states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level|default(-1)|int if states.zwave.neo_coolcam_doorwindow_detector is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.neo_coolcam_doorwindow_detector.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'


  - platform: template
    sensors:
      zwave_fire_alarm:
        friendly_name: 'Fire Alarm - Hallway'
        value_template: "{{ states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level|default(-1)|int if states.zwave.fibaro_system_fgsd002_smoke_sensor is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.fibaro_system_fgsd002_smoke_sensor.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'

  - platform: template
    sensors:
      zwave_thermostat_livingroom:
        friendly_name: 'Thermostat - Livingroom'
        value_template: "{{ states.zwave.danfoss_z_thermostat.attributes.battery_level|default(-1)|int if states.zwave.danfoss_z_thermostat is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.danfoss_z_thermostat.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.danfoss_z_thermostat.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.danfoss_z_thermostat.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.danfoss_z_thermostat.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.danfoss_z_thermostat.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.danfoss_z_thermostat.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.danfoss_z_thermostat.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.danfoss_z_thermostat.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.danfoss_z_thermostat.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.danfoss_z_thermostat.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'

  - platform: template
    sensors:
      zwave_thermostat_kitchen:
        friendly_name: 'Thermostat - Kitchen'
        value_template: "{{ states.zwave.danfoss_z_thermostat_2.attributes.battery_level|default(-1)|int if states.zwave.danfoss_z_thermostat_2 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.danfoss_z_thermostat_2.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.danfoss_z_thermostat_2.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.danfoss_z_thermostat_2.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.danfoss_z_thermostat_2.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.danfoss_z_thermostat_2.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.danfoss_z_thermostat_2.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.danfoss_z_thermostat_2.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.danfoss_z_thermostat_2.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.danfoss_z_thermostat_2.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.danfoss_z_thermostat_2.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'


  - platform: template
    sensors:
      zwave_thermostat_bedroom:
        friendly_name: 'Thermostat - Bedroom'
        value_template: "{{ states.zwave.danfoss_z_thermostat_3.attributes.battery_level|default(-1)|int if states.zwave.danfoss_z_thermostat_3 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.danfoss_z_thermostat_3.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.danfoss_z_thermostat_3.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.danfoss_z_thermostat_3.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.danfoss_z_thermostat_3.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.danfoss_z_thermostat_3.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.danfoss_z_thermostat_3.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.danfoss_z_thermostat_3.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.danfoss_z_thermostat_3.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.danfoss_z_thermostat_3.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.danfoss_z_thermostat_3.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'

  - platform: template
    sensors:
      zwave_thermostat_elinleft:
        friendly_name: 'Thermostat - Elin Left'
        value_template: "{{ states.zwave.danfoss_z_thermostat_4.attributes.battery_level|default(-1)|int if states.zwave.danfoss_z_thermostat_4 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.danfoss_z_thermostat_4.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.danfoss_z_thermostat_4.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.danfoss_z_thermostat_4.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.danfoss_z_thermostat_4.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.danfoss_z_thermostat_4.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.danfoss_z_thermostat_4.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.danfoss_z_thermostat_4.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.danfoss_z_thermostat_4.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.danfoss_z_thermostat_4.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.danfoss_z_thermostat_4.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'


  - platform: template
    sensors:
      zwave_thermostat_elinright:
        friendly_name: 'Thermostat - Elin Right'
        value_template: "{{ states.zwave.danfoss_z_thermostat_5.attributes.battery_level|default(-1)|int if states.zwave.danfoss_z_thermostat_5 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.danfoss_z_thermostat_5.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.danfoss_z_thermostat_5.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.danfoss_z_thermostat_5.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.danfoss_z_thermostat_5.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.danfoss_z_thermostat_5.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.danfoss_z_thermostat_5.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.danfoss_z_thermostat_5.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.danfoss_z_thermostat_5.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.danfoss_z_thermostat_5.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.danfoss_z_thermostat_5.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'

  - platform: template
    sensors:
      zwave_thermostat_vilhelm:
        friendly_name: 'Thermostat - Vilhelm'
        value_template: "{{ states.zwave.danfoss_z_thermostat_6.attributes.battery_level|default(-1)|int if states.zwave.danfoss_z_thermostat_6 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.danfoss_z_thermostat_6.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.danfoss_z_thermostat_6.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.danfoss_z_thermostat_6.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.danfoss_z_thermostat_6.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.danfoss_z_thermostat_6.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.danfoss_z_thermostat_6.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.danfoss_z_thermostat_6.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.danfoss_z_thermostat_6.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.danfoss_z_thermostat_6.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.danfoss_z_thermostat_6.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'

  - platform: template
    sensors:
      zwave_thermostat_office:
        friendly_name: 'Thermostat - Office'
        value_template: "{{ states.zwave.danfoss_z_thermostat_7.attributes.battery_level|default(-1)|int if states.zwave.danfoss_z_thermostat_7 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.danfoss_z_thermostat_7.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.danfoss_z_thermostat_7.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.danfoss_z_thermostat_7.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.danfoss_z_thermostat_7.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.danfoss_z_thermostat_7.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.danfoss_z_thermostat_7.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.danfoss_z_thermostat_7.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.danfoss_z_thermostat_7.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.danfoss_z_thermostat_7.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.danfoss_z_thermostat_7.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'


  - platform: template
    sensors:
      zwave_flood_kitchen:
        friendly_name: 'Flood sensor - Kitchen'
        value_template: "{{ states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level|default(-1)|int if states.zwave.aeotec_dsb45_water_sensor is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.aeotec_dsb45_water_sensor.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'


  - platform: template
    sensors:
      zwave_flood_bathroom:
        friendly_name: 'Flood sensor - Bathroom'
        value_template: "{{ states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level|default(-1)|int if states.zwave.aeotec_dsb45_water_sensor_2 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.zwave.aeotec_dsb45_water_sensor_2.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           mdi:battery-outline
                        {% endif %}'



history_graph:
  battery_status:
    name: Battery Status
    entities:
      - sensor.zwave_pir_hallway
      - sensor.zwave_door_hallway
      - sensor.zwave_fire_alarm
      - sensor.zwave_thermostat_livingroom
      - sensor.zwave_thermostat_kitchen
      - sensor.zwave_thermostat_bedroom
      - sensor.zwave_thermostat_elinleft
      - sensor.zwave_thermostat_elinright
      - sensor.zwave_thermostat_vilhelm
      - sensor.zwave_thermostat_office
      - sensor.zwave_flood_kitchen
      - sensor.zwave_flood_bathroom
      - sensor.ikea_remote_livingroom
      - sensor.ikea_remote_bedroom
      - sensor.ikea_remote_elin
      - sensor.ikea_remote_vilhelm
    hours_to_show: 168 
    refresh: 300


group:
  battery_status_view:
    icon: mdi:battery-unknown
    view: yes
    entities:
      - group.device_batteries
      - group.thermostat_batteries
      - group.tradfri_batteries
      - history_graph.battery_status

  device_batteries:
    name: Zwave Batteries
    entities:
      - sensor.zwave_pir_hallway
      - sensor.zwave_door_hallway
      - sensor.zwave_fire_alarm
      - sensor.zwave_flood_kitchen
      - sensor.zwave_flood_bathroom

  tradfri_batteries:
    name: Trådfri Batteries
    entities:
      - sensor.ikea_remote_livingroom
      - sensor.ikea_remote_bedroom
      - sensor.ikea_remote_elin
      - sensor.ikea_remote_vilhelm

  thermostat_batteries:
    name: Thermostat Batteries
    entities:
      - sensor.zwave_thermostat_livingroom
      - sensor.zwave_thermostat_kitchen
      - sensor.zwave_thermostat_bedroom
      - sensor.zwave_thermostat_elinleft
      - sensor.zwave_thermostat_elinright
      - sensor.zwave_thermostat_vilhelm
      - sensor.zwave_thermostat_office
  

automation:
  - alias: Low Battery Sensors
    initial_state: 'on'
    trigger:
      - platform: numeric_state
        entity_id: sensor.zwave_pir_hallway
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_door_hallway
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.ikea_remote_livingroom
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.ikea_remote_bedroom
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.ikea_remote_elin
        above: 1
        below: 10     
      - platform: numeric_state
        entity_id: sensor.ikea_remote_vilhelm
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_flood_kitchen
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_flood_bathroom 
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_thermostat_livingroom 
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_thermostat_kitchen 
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_thermostat_bedroom 
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_thermostat_elinleft 
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_thermostat_elinright
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_thermostat_vilhelm
        above: 1
        below: 10
      - platform: numeric_state
        entity_id: sensor.zwave_thermostat_office 
        above: 1
        below: 10
    action:
      - service: notify.pushbullet
        data_template:
          title: 'Battery low'
          message: >
            '{{ trigger.to_state.name }}'
